// enum или перечисление!
//если хотите присвоить какое то значение то пример снизу , если поставить первый элемент числом то следующие будут на 1 болльше 
// если поставить какое то значение по типу числато седующие будут на 1 больше а если поставить уже строку то это другое дело там надо будет все следующие ставить либо числом либо строкой (если поставить допустим строку а потом сразу число то ошибок дальше не будет так как все значнения после числа становятся числом на 1 больше предыдущего)
///энамы бывают трех типов строковые числовые и гетерогеные которые являются комбинацией первых двух (почти не бывает)
//так делать не надо! если пишешь энам то все значения внутри должны быть одного типа
var Directions;
(function (Directions) {
    Directions[Directions["TOP"] = 0] = "TOP";
    Directions[Directions["RIGHT"] = 5] = "RIGHT";
    Directions[Directions["LEFT"] = 6] = "LEFT";
    Directions[Directions["BOTTOM"] = 2] = "BOTTOM";
})(Directions || (Directions = {}));
var TimingFunc;
(function (TimingFunc) {
    TimingFunc["EASE"] = "easy";
    TimingFunc["EASE_IN"] = "easy-in";
    TimingFunc["LINEAR1"] = "linear";
})(TimingFunc || (TimingFunc = {}));
var frame = function (elem, dir, timeF) {
    if (dir === Directions.BOTTOM) { //имеет смысл сравнивать только с одной из возможный вариантов Direction
        timeF.toLocaleLowerCase(); //методы у энамов будут подсказываться в зависимости от того какой первый элемент будет в энаме
    }
};
///энамы бывают ток в ts поэтому после компеляции они становятся уже функциями переменными которые можно ускорить с помоштю константы просто написав const перед самим энамом , делается это для того чтобы вместо огромных функций в js по типу 
